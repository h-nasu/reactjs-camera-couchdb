{"version":3,"sources":["webpack:///./src/client/app/BaseComponent.jsx?64f0"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;KAEqB,a;;;;;;;;;;;6BACD;AAAA;;AAAA,yCAAT,OAAS;AAAT,gBAAS;AAAA;;AAChB,eAAQ,OAAR,CAAiB,UAAC,MAAD;AAAA,gBAAY,OAAK,MAAL,IAAe,OAAK,MAAL,EAAa,IAAb,QAA3B;AAAA,QAAjB;AACD;;;kCAEY,Q,EAAU;AACrB,WAAI,SAAS,MAAT,IAAmB,GAAnB,IAA0B,SAAS,MAAT,GAAkB,GAAhD,EAAqD;AACnD,gBAAO,QAAP;AACD,QAFD,MAEO;AACL,aAAI,QAAQ,IAAI,KAAJ,CAAU,SAAS,UAAnB,CAAZ;AACA,eAAM,QAAN,GAAiB,QAAjB;AACA,eAAM,KAAN;AACD;AACF;;;gCAEU,Q,EAAU;AACnB,cAAO,SAAS,IAAT,EAAP;AACD;;;oCAEc,O,EAAS;;AAEtB,WAAI,UAAJ;AACA,WAAI,QAAQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsB,OAAtB,CAA8B,QAA9B,KAA2C,CAA/C,EACI,aAAa,KAAK,QAAQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAL,CAAb,CADJ,KAGI,aAAa,SAAS,QAAQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAT,CAAb;;;AAGJ,WAAI,aAAa,QAAQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsB,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoC,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAjB;;;AAGA,WAAI,KAAK,IAAI,UAAJ,CAAe,WAAW,MAA1B,CAAT;AACA,YAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,WAAW,MAA/B,EAAuC,GAAvC,EAA4C;AACxC,YAAG,CAAH,IAAQ,WAAW,UAAX,CAAsB,CAAtB,CAAR;AACH;;AAED,cAAO,IAAI,IAAJ,CAAS,CAAC,EAAD,CAAT,EAAe,EAAC,MAAK,UAAN,EAAf,CAAP;AACD;;;;GArCwC,gBAAM,S;;mBAA5B,a","file":"0.37bda8438fa74a253750.hot-update.js","sourcesContent":["import React from 'react';\n\nexport default class BaseComponent extends React.Component {\n  _bind(...methods) {\n    methods.forEach( (method) => this[method] = this[method].bind(this) );\n  }\n\n  _checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response\n    } else {\n      var error = new Error(response.statusText)\n      error.response = response\n      throw error\n    }\n  }\n\n  _parseJSON(response) {\n    return response.json()\n  }\n\n  _dataURItoBlob(dataURI) {\n    // convert base64/URLEncoded data component to raw binary data held in a string\n    var byteString;\n    if (dataURI.split(',')[0].indexOf('base64') >= 0)\n        byteString = atob(dataURI.split(',')[1]);\n    else\n        byteString = unescape(dataURI.split(',')[1]);\n\n    // separate out the mime component\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // write the bytes of the string to a typed array\n    var ia = new Uint8Array(byteString.length);\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new Blob([ia], {type:mimeString});\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/app/BaseComponent.jsx\n **/"],"sourceRoot":""}